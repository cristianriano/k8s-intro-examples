/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.example.shoppinglist

import com.example.shoppinglist.entities.ShoppingItem
import com.example.shoppinglist.repositories.ShoppingItemRepository
import io.restassured.RestAssured
import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.BeforeEach
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.boot.test.context.SpringBootTest
import org.springframework.boot.test.web.server.LocalServerPort
import org.springframework.test.context.ActiveProfiles
import kotlin.test.Test
import kotlin.test.assertFalse
import kotlin.test.assertTrue

@ActiveProfiles("test")
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
internal class AppTest {

  @Autowired private lateinit var repo : ShoppingItemRepository

  @LocalServerPort
  var localPort: Int = 0

  @BeforeEach
  fun setUp() {
    RestAssured.port = localPort
    repo.deleteAll()
  }

  @Test
  fun `it returns empty items when none created`() {
    val items =
      RestAssured.get("/items")
      .then()
      .statusCode(200)
      .extract()
      .`as`(List::class.java)

    assertTrue { items.isEmpty() }
  }

  @org.junit.jupiter.api.Test
  fun `it retrieves created products`() {
    postShoppingItem("Milk")
    postShoppingItem("Eggs")

    val items =
      RestAssured.get("/items")
        .then()
        .statusCode(200)
        .extract()
        .`as`(List::class.java)

    assertFalse { items.isEmpty() }
    assertThat(items).containsExactly("Milk", "Eggs")
  }

  private fun postShoppingItem(itemName: String) =
    RestAssured
      .given()
      .body(itemName)
      .post("/items")
      .then()
      .statusCode(201)
}
